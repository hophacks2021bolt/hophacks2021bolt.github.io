{"version":3,"sources":["pages/Home.jsx","pages/Survey.jsx","pages/MapChart.jsx","pages/UnitedStatesChart.jsx","pages/Dashboard.jsx","App.js","reportWebVitals.js","index.js"],"names":["Home","className","id","to","Button","renderAs","Survey","useState","questionNum","setQuestionNum","country","setCountry","usState","setusState","numPeople","setNumPeople","hoursAC","setHoursAC","electricWaterHeater","setElectricWaterHeater","numFridges","setNumFridges","hoursLargeKitchenApplicances","setHoursLargeKitchenAppliances","hoursSmallKitchenApplicances","setHoursSmallKitchenAppliances","loadsWashingPerWeek","setLoadsWashingPerWeek","loadsDryingPerWeek","setLoadsDryingPerWeek","hoursDishwasherPerWeek","setHoursDishwasherPerWeek","hoursBathroomElectronicsPerDay","setHoursBathroomElectronicsPerDay","hoursComputerPerDay","setHoursComputerPerDay","hoursTVPerDay","setHoursTVPerDay","smartHome","setSmartHome","hoursNECPerDay","sethoursNECPerDay","setIsUs","Carousel","activeIndex","indicators","controls","Item","Form","Group","controlId","Label","Select","type","onChange","e","target","value","selected","Row","Col","onClick","disabled","MapChart","content","setCountryContent","setCountryCode","isUSA","projectionConfig","scale","geography","geographies","map","geo","onMouseEnter","properties","NAME","ISO_A3","onMouseLeave","style","default","fill","outline","hover","pressed","rsmKey","UnitedStatesChart","projection","name","Dashboard","isUS","countryCode","setCode","returnIsUS","App","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19bd369e.chunk.js","sourcesContent":["import React from \"react\";\nimport '../App.css';\nimport './Home.css'\nimport {Button} from \"react-bootstrap\";\nimport { Link, Router, BrowserRouter } from 'react-router-dom'\n\nfunction Home() {\n  return (\n    \n    <div className=\"home\">\n      <div className=\"Splash-page\">\n        <h1 id=\"title\">KiloWhat</h1>\n        <p id=\"description\">a worldwide energy comparison tool</p>\n        <div className=\"row\">\n          <div className=\"col\" id=\"surveyDiv\">\n            <Link to=\"/survey\">\n              <Button className=\"button\">Survey</Button>\n            </Link>\n          </div>\n          <div className=\"col\" id=\"dashboardDiv\">\n            <Link to=\"/dashboard\">\n              <Button renderAs=\"button\" className=\"button\">Dashboard</Button>\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useState } from \"react\"\nimport Carousel from \"react-bootstrap/Carousel\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\nimport {Row, Col} from \"react-bootstrap\";\nimport \"./Survey.css\";\n\n\nfunction Survey(){\n    const [questionNum, setQuestionNum] = useState(0);\n    const [country, setCountry] = useState(\"US\")\n    const [usState, setusState] = useState(\"N/A\")\n    const [numPeople, setNumPeople] = useState(4)\n    const [squareFootage, setSquareFootage] = useState(2000)\n    const [hoursAC, setHoursAC] = useState(7)\n    const [electricWaterHeater, setElectricWaterHeater] = useState(1)\n    const [numFridges, setNumFridges] = useState(1)\n    const [hoursLargeKitchenApplicances, setHoursLargeKitchenAppliances] = useState(3)\n    const [hoursSmallKitchenApplicances, setHoursSmallKitchenAppliances] = useState(3)\n    const [loadsWashingPerWeek, setLoadsWashingPerWeek] = useState(3)\n    const [loadsDryingPerWeek, setLoadsDryingPerWeek] = useState(3)\n    const [hoursDishwasherPerWeek, setHoursDishwasherPerWeek] = useState(9)\n    const [hoursBathroomElectronicsPerDay, setHoursBathroomElectronicsPerDay] = useState(3)\n    const [hoursComputerPerDay, setHoursComputerPerDay] = useState(9)\n    const [hoursTVPerDay, setHoursTVPerDay] = useState(3)\n    const [smartHome, setSmartHome] = useState(0)\n    const [hoursNECPerDay, sethoursNECPerDay] = useState(0)\n    const [isUS, setIsUs] = useState(false)\n\n    const handleNext = () => {\n        setQuestionNum(questionNum+1);\n    };\n\n    const handlePrev = () => {\n        setQuestionNum(questionNum-1);\n    };\n\n    const canGoBack = () => {\n        return !(questionNum > 0)\n    }\n\n    const canGoNext = () => {\n        return !(questionNum < 16)\n    }\n\n    const isCountryUS = () => {\n        return country == \"USA\"\n    }\n\n    return (\n        <div id=\"survey\">\n            <Carousel activeIndex={questionNum} indicators={false} controls={false}>\n                <Carousel.Item>\n                    <Form.Group className=\"questionDiv\" controlId=\"formBasicDropdown\">\n                        <Form.Label>1. Please select your country</Form.Label>\n                        <Form.Select type=\"select\" onChange={(e) => { setCountry(e.target.value); if(e.target.value == \"USA\"){setIsUs(true)}; }} value={country}>\n      <option value=\"N/A\" selected> Prefer Not to Answer</option>                    \n      <option value=\"USA\">United States of America</option>                      \n      <option value=\"AFG\">Afghanistan</option>\n                            <option value=\"ALB\">Albania</option>\n                            <option value=\"DZA\">Algeria</option>\n                            <option value=\"ASM\">American Samoa</option>\n                        <option value=\"AGO\">Angola</option>\n                        <option value=\"ATG\">Antigua and Barbuda</option>\n                        <option value=\"ARG\">Argentina</option>\n                        <option value=\"ARM\">Armenia</option>\n                        <option value=\"ABW\">Aruba</option>\n                        <option value=\"AUS\">Australia</option>\n                        <option value=\"AUT\">Austria</option>\n                        <option value=\"AZE\">Azerbaijan</option>\n                        <option value=\"BHS\">Bahamas</option>\n                        <option value=\"BHR\">Bahrain</option>\n                        <option value=\"BGD\">Bangladesh</option>\n                        <option value=\"BRB\">Barbados</option>\n                        <option value=\"BLR\">Belarus</option>\n                        <option value=\"BEL\">Belgium</option>\n                        <option value=\"BLZ\">Belize</option>\n                        <option value=\"BEN\">Benin</option>\n                        <option value=\"BMU\">Bermuda</option>\n                        <option value=\"BTN\">Bhutan</option>\n                        <option value=\"BIH\">Bosnia and Herzegovina</option>\n                        <option value=\"BWA\">Botswana</option>\n                        <option value=\"BRA\">Brazil</option>\n                        <option value=\"BGR\">Bulgaria</option>\n                        <option value=\"BFA\">Burkina Faso</option>\n                        <option value=\"BDI\">Burundi</option>\n                        <option value=\"KHM\">Cambodia</option>\n                        <option value=\"CMR\">Cameroon</option>\n                        <option value=\"CAN\">Canada</option>\n                        <option value=\"CYM\">Cayman Islands</option>\n                        <option value=\"CAF\">Central African Republic</option>\n                        <option value=\"TCD\">Chad</option>\n                        <option value=\"CHL\">Chile</option>\n                        <option value=\"CHN\">China</option>\n                        <option value=\"COL\">Colombia</option>\n                        <option value=\"COM\">Comoros</option>\n                        <option value=\"COG\">Congo</option>\n                        <option value=\"COK\">Cook Islands</option>\n                        <option value=\"CRI\">Costa Rica</option>\n                        <option value=\"HRV\">Croatia</option>\n                        <option value=\"CUB\">Cuba</option>\n                        <option value=\"CYP\">Cyprus</option>\n                        <option value=\"CZE\">Czechia</option>\n                        <option value=\"DNK\">Denmark</option>\n                        <option value=\"DJI\">Djibouti</option>\n                        <option value=\"DMA\">Dominica</option>\n                        <option value=\"DOM\">Dominican Republic</option>\n                        <option value=\"ECU\">Ecuador</option>\n                            <option value=\"EGY\">Egypt</option>\n                        <option value=\"SLV\">El Salvador</option>\n                        <option value=\"GNQ\">Equatorial Guinea</option>\n                        <option value=\"ERI\">Eritrea</option>\n                        <option value=\"EST\">Estonia</option>\n                        <option value=\"SWZ\">Eswatini</option>\n                        <option value=\"ETH\">Ethiopia</option>\n                        <option value=\"FJI\">Fiji</option>\n                        <option value=\"FIN\">Finland</option>\n                        <option value=\"FRA\">France</option>\n                        <option value=\"GUF\">French Guiana</option>\n                        <option value=\"PYF\">French Polynesia</option>\n                        <option value=\"GAB\">Gabon</option>\n                        <option value=\"GMB\">Gambia</option>\n                        <option value=\"GEO\">Georgia</option>\n                        <option value=\"DEU\">Germany</option>\n                        <option value=\"GHA\">Ghana</option>\n                        <option value=\"GIB\">Gibraltar</option>\n                        <option value=\"GRC\">Greece</option>\n                        <option value=\"GRL\">Greenland</option>\n                        <option value=\"GRD\">Grenada</option>\n                        <option value=\"GLP\">Guadeloupe</option>\n                        <option value=\"GUM\">Guam</option>\n                        <option value=\"GTM\">Guatemala</option>\n                        <option value=\"GIN\">Guinea</option>\n                        <option value=\"GNB\">Guinea-Bissau</option>\n                        <option value=\"GUY\">Guyana</option>\n                        <option value=\"HTI\">Haiti</option>\n                        <option value=\"HND\">Honduras</option>\n                        <option value=\"HKG\">Hong Kong</option>\n                        <option value=\"HUN\">Hungary</option>\n                        <option value=\"ISL\">Iceland</option>\n                        <option value=\"IND\">India</option>\n                        <option value=\"IDN\">Indonesia</option>\n                        <option value=\"IRQ\">Iraq</option>\n                        <option value=\"IRL\">Ireland</option>\n                        <option value=\"ISR\">Israel</option>\n                        <option value=\"ITA\">Italy</option>\n                        <option value=\"JAM\">Jamaica</option>\n                        <option value=\"JPN\">Japan</option>\n                        <option value=\"JOR\">Jordan</option>\n                        <option value=\"KAZ\">Kazakhstan</option>\n                        <option value=\"KEN\">Kenya</option>\n                        <option value=\"KIR\">Kiribati</option>\n                        <option value=\"KWT\">Kuwait</option>\n                        <option value=\"KGZ\">Kyrgyzstan</option>\n                        <option value=\"LVA\">Latvia</option>\n                        <option value=\"LBN\">Lebanon</option>\n                        <option value=\"LSO\">Lesotho</option>\n                        <option value=\"LBR\">Liberia</option>\n                        <option value=\"LBY\">Libya</option>\n                        <option value=\"LTU\">Lithuania</option>\n                        <option value=\"LUX\">Luxembourg</option>\n                        <option value=\"MDG\">Madagascar</option>\n                        <option value=\"MWI\">Malawi</option>\n                        <option value=\"MYS\">Malaysia</option>\n                        <option value=\"MDV\">Maldives</option>\n                        <option value=\"MLI\">Mali</option>\n                        <option value=\"MLT\">Malta</option>\n                        <option value=\"MTQ\">Martinique</option>\n                        <option value=\"MRT\">Mauritania</option>\n                        <option value=\"MUS\">Mauritius</option>\n                        <option value=\"MEX\">Mexico</option>\n                        <option value=\"MNG\">Mongolia</option>\n                        <option value=\"MNE\">Montenegro</option>\n                        <option value=\"MSR\">Montserrat</option>\n                        <option value=\"MAR\">Morocco</option>\n                        <option value=\"MOZ\">Mozambique</option>\n                        <option value=\"MMR\">Myanmar</option>\n                        <option value=\"NAM\">Namibia</option>\n                        <option value=\"NRU\">Nauru</option>\n                        <option value=\"NPL\">Nepal</option>\n                        <option value=\"NLD\">Netherlands</option>\n                        <option value=\"NCL\">New Caledonia</option>\n                        <option value=\"NZL\">New Zealand</option>\n                        <option value=\"NIC\">Nicaragua</option>\n                        <option value=\"NER\">Niger</option>\n                        <option value=\"NGA\">Nigeria</option>\n                        <option value=\"NIU\">Niue</option>\n                        <option value=\"MKD\">North Macedonia</option>\n                        <option value=\"MNP\">Northern Mariana Islands</option>\n                        <option value=\"NOR\">Norway</option>\n                        <option value=\"OMN\">Oman</option>\n                        <option value=\"PAK\">Pakistan</option>\n                        <option value=\"PAN\">Panama</option>\n                        <option value=\"PNG\">Papua New Guinea</option>\n                        <option value=\"PRY\">Paraguay</option>\n                        <option value=\"PER\">Peru</option>\n                        <option value=\"PHL\">Philippines</option>\n                        <option value=\"POL\">Poland</option>\n                        <option value=\"PRT\">Portugal</option>\n                        <option value=\"PRI\">Puerto Rico</option>\n                        <option value=\"QAT\">Qatar</option>\n                        <option value=\"ROU\">Romania</option>\n                        <option value=\"RWA\">Rwanda</option>\n                        <option value=\"KNA\">Saint Kitts and Nevis</option>\n                        <option value=\"LCA\">Saint Lucia</option>\n                        <option value=\"SPM\">Saint Pierre and Miquelon</option>\n                        <option value=\"VCT\">Saint Vincent and the Grenadines</option>\n                        <option value=\"WSM\">Samoa</option>\n                        <option value=\"STP\">Sao Tome and Principe</option>\n                        <option value=\"SAU\">Saudi Arabia</option>\n                        <option value=\"SEN\">Senegal</option>\n                        <option value=\"SRB\">Serbia</option>\n                        <option value=\"SYC\">Seychelles</option>\n                        <option value=\"SLE\">Sierra Leone</option>\n                        <option value=\"SGP\">Singapore</option>\n                        <option value=\"SVK\">Slovakia</option>\n                        <option value=\"SVN\">Slovenia</option>\n                        <option value=\"SLB\">Solomon Islands</option>\n                        <option value=\"SOM\">Somalia</option>\n                        <option value=\"ZAF\">South Africa</option>\n                        <option value=\"SSD\">South Sudan</option>\n                        <option value=\"ESP\">Spain</option>\n                        <option value=\"LKA\">Sri Lanka</option>\n                        <option value=\"SDN\">Sudan</option>\n                        <option value=\"SUR\">Suriname</option>\n                        <option value=\"SWE\">Sweden</option>\n                        <option value=\"CHE\">Switzerland</option>\n                        <option value=\"TJK\">Tajikistan</option>\n                        <option value=\"THA\">Thailand</option>\n                        <option value=\"TGO\">Togo</option>\n                        <option value=\"TON\">Tonga</option>\n                        <option value=\"TTO\">Trinidad and Tobago</option>\n                        <option value=\"TUN\">Tunisia</option>\n                        <option value=\"TUR\">Turkey</option>\n                        <option value=\"TKM\">Turkmenistan</option>\n                        <option value=\"TCA\">Turks and Caicos Islands</option>\n                        <option value=\"UGA\">Uganda</option>\n                        <option value=\"UKR\">Ukraine</option>\n                        <option value=\"ARE\">United Arab Emirates</option>\n                        <option value=\"URY\">Uruguay</option>\n                        <option value=\"UZB\">Uzbekistan</option>\n                        <option value=\"VUT\">Vanuatu</option>\n                        <option value=\"ESH\">Western Sahara</option>\n                        <option value=\"YEM\">Yemen</option>\n                        <option value=\"ZMB\">Zambia</option>\n                        <option value=\"ZWE\">Zimbabwe</option>\n                        </Form.Select>\n                        {isCountryUS() ? \n                          <div className=\"ml-3 mt-3\">\n                            <Form.Label> a. Please select your state </Form.Label>\n                          <Form.Select type=\"select\" onChange={(e) => { setusState(e.target.value) }} value={usState}>\n      <option value=\"N/A\" selected> Prefer Not to Answer</option>                    \n                          \t<option value=\"AL\">Alabama</option>\n\t<option value=\"AK\">Alaska</option>\n\t<option value=\"AZ\">Arizona</option>\n\t<option value=\"AR\">Arkansas</option>\n\t<option value=\"CA\">California</option>\n\t<option value=\"CO\">Colorado</option>\n\t<option value=\"CT\">Connecticut</option>\n\t<option value=\"DE\">Delaware</option>\n\t<option value=\"DC\">District Of Columbia</option>\n\t<option value=\"FL\">Florida</option>\n\t<option value=\"GA\">Georgia</option>\n\t<option value=\"HI\">Hawaii</option>\n\t<option value=\"ID\">Idaho</option>\n\t<option value=\"IL\">Illinois</option>\n\t<option value=\"IN\">Indiana</option>\n\t<option value=\"IA\">Iowa</option>\n\t<option value=\"KS\">Kansas</option>\n\t<option value=\"KY\">Kentucky</option>\n\t<option value=\"LA\">Louisiana</option>\n\t<option value=\"ME\">Maine</option>\n\t<option value=\"MD\">Maryland</option>\n\t<option value=\"MA\">Massachusetts</option>\n\t<option value=\"MI\">Michigan</option>\n\t<option value=\"MN\">Minnesota</option>\n\t<option value=\"MS\">Mississippi</option>\n\t<option value=\"MO\">Missouri</option>\n\t<option value=\"MT\">Montana</option>\n\t<option value=\"NE\">Nebraska</option>\n\t<option value=\"NV\">Nevada</option>\n\t<option value=\"NH\">New Hampshire</option>\n\t<option value=\"NJ\">New Jersey</option>\n\t<option value=\"NM\">New Mexico</option>\n\t<option value=\"NY\">New York</option>\n\t<option value=\"NC\">North Carolina</option>\n\t<option value=\"ND\">North Dakota</option>\n\t<option value=\"OH\">Ohio</option>\n\t<option value=\"OK\">Oklahoma</option>\n\t<option value=\"OR\">Oregon</option>\n\t<option value=\"PA\">Pennsylvania</option>\n\t<option value=\"RI\">Rhode Island</option>\n\t<option value=\"SC\">South Carolina</option>\n\t<option value=\"SD\">South Dakota</option>\n\t<option value=\"TN\">Tennessee</option>\n\t<option value=\"TX\">Texas</option>\n\t<option value=\"UT\">Utah</option>\n\t<option value=\"VT\">Vermont</option>\n\t<option value=\"VA\">Virginia</option>\n\t<option value=\"WA\">Washington</option>\n\t<option value=\"WV\">West Virginia</option>\n\t<option value=\"WI\">Wisconsin</option>\n\t<option value=\"WY\">Wyoming</option>\n                          </Form.Select>\n                          </div>\n\n                        : null}              \n                      </Form.Group>\n                </Carousel.Item>\n                <Carousel.Item>\n                    <Form.Group className=\"questionDiv\" controlId=\"formNumber\">\n                        <Form.Label> 2. How many people live in your household? </Form.Label>\n                        <Form.Select type=\"select\" onChange={(e) => { setNumPeople(e.target.value) }} value={numPeople}>\n      <option value=\"0\" selected> Prefer Not to Answer</option>                    \n                            <option value=\"1\">1</option>\n                            <option value=\"2\">2</option>\n                            <option value=\"3\">3</option>\n                            <option value=\"4\">4</option>\n                            <option value=\"5\">5</option>\n                            <option value=\"6\">6</option>\n                            <option value=\"7\">7+</option>\n                        </Form.Select>\n                    </Form.Group>\n                </Carousel.Item>\n                <Carousel.Item>\n                    <Form.Group className=\"questionDiv\" controlId=\"formNumber\">\n                        <Form.Label> 2. What is the square footage of your home? </Form.Label>\n                        <Form.Select type=\"select\" onChange={(e) => { setNumPeople(e.target.value) }} value={numPeople}>\n      <option value=\"N/A\" selected> Prefer Not to Answer</option>                    \n                            <option value=\"1\"> &lt;1,000 </option>\n                            <option value=\"2\">1,000-1,500</option>\n                            <option value=\"3\">1,500-2,000</option>\n                            <option value=\"4\">2,000-2,500</option>\n                            <option value=\"5\">2,500-3,000</option>\n                            <option value=\"6\">3000+</option>\n                        </Form.Select>\n                    </Form.Group>\n                </Carousel.Item>\n                <Carousel.Item>\n                    <Form.Group className=\"questionDiv\" controlId=\"formNumber\">\n                        <Form.Label> 3. How many hours per day does your AC run? </Form.Label>\n                        <Form.Select type=\"select\" onChange={(e) => { setHoursAC(e.target.value) }} value={hoursAC}>\n      <option value=\"N/A\" selected> Prefer Not to Answer</option>                    \n                            <option value=\"1\"> 0 </option>\n                            <option value=\"2\"> 1-4 </option>\n                            <option value=\"3\"> 5-10 </option>\n                            <option value=\"4\"> 9-12</option>\n                            <option value=\"5\"> 13-16</option>\n                            <option value=\"6\"> 17-20</option>\n                            <option value=\"7\"> 21-24</option>\n                        </Form.Select>\n                    </Form.Group>\n                </Carousel.Item>\n                <Carousel.Item>\n                    <Form.Group className=\"questionDiv\" controlId=\"formNumber\">\n                        <Form.Label> 4. Do you have an electric water heater? </Form.Label>\n                        <Form.Select type=\"select\" onChange={(e) => { setElectricWaterHeater(e.target.value) }} value={electricWaterHeater}>\n      <option value=\"N/A\" selected> Prefer Not to Answer</option>                    \n                            <option value=\"1\"> Yes </option>\n                            <option value=\"2\"> No</option>\n                        </Form.Select>\n                    </Form.Group>\n                </Carousel.Item>\n                <Carousel.Item>\n                    <Form.Group className=\"questionDiv\" controlId=\"formNumber\">\n                        <Form.Label> 5. How many fridges/ freezers are in your home? </Form.Label>\n                        <Form.Select type=\"select\" onChange={(e) => { setNumFridges(e.target.value) }} value={numFridges}>\n      <option value=\"N/A\" selected> Prefer Not to Answer</option>                    \n                            <option value=\"1\"> 0 </option>\n                            <option value=\"2\"> 1</option>\n                            <option value=\"3\"> 2</option>\n                            <option value=\"4\"> 3+</option>\n                        </Form.Select>\n                    </Form.Group>\n                </Carousel.Item>\n                <Carousel.Item>\n                    <Form.Group className=\"questionDiv\" controlId=\"formNumber\">\n                        <Form.Label> 6. How many cumulative hours per day are large kitchen appliances used (Oven, Stove, Hob, etc.) </Form.Label>\n                        <Form.Select type=\"select\" onChange={(e) => { setHoursLargeKitchenAppliances(e.target.value) }} value={hoursLargeKitchenApplicances}>\n      <option value=\"N/A\" selected> Prefer Not to Answer</option>                    \n                            <option value=\"1\"> 0 </option>\n                            <option value=\"2\"> 1</option>\n                            <option value=\"3\"> 2</option>\n                            <option value=\"4\"> 3+</option>\n                        </Form.Select>\n                    </Form.Group>\n                </Carousel.Item>\n                <Carousel.Item>\n                    <Form.Group className=\"questionDiv\" controlId=\"formNumber\">\n                        <Form.Label> 7. How many cumulative hours per day are small kitchen appliances used (Microwave, Blender, etc.) </Form.Label>\n                        <Form.Select type=\"select\" onChange={(e) => { setHoursSmallKitchenAppliances(e.target.value) }} value={hoursSmallKitchenApplicances}>\n      <option value=\"N/A\" selected> Prefer Not to Answer</option>                    \n                            <option value=\"1\"> 0 </option>\n                            <option value=\"2\"> 1</option>\n                            <option value=\"3\"> 2</option>\n                            <option value=\"4\"> 3+</option>\n                        </Form.Select>\n                    </Form.Group>\n                </Carousel.Item>\n                <Carousel.Item>\n                    <Form.Group className=\"questionDiv\" controlId=\"formNumber\">\n                        <Form.Label> 8. How many washing machine loads are done per week?</Form.Label>\n                        <Form.Select type=\"select\" onChange={(e) => { setLoadsWashingPerWeek(e.target.value) }} value={loadsWashingPerWeek}>\n      <option value=\"N/A\" selected> Prefer Not to Answer</option>                    \n                            <option value=\"1\"> 0 </option>\n                            <option value=\"2\"> 1-2</option>\n                            <option value=\"3\"> 3-4</option>\n                            <option value=\"4\"> 5-6</option>\n                            <option value=\"5\"> 7+</option>\n                        </Form.Select>\n                    </Form.Group>\n                </Carousel.Item>\n                <Carousel.Item>\n                    <Form.Group className=\"questionDiv\" controlId=\"formNumber\">\n                        <Form.Label> 9. How many dryer loads are done per week?</Form.Label>\n                        <Form.Select type=\"select\" onChange={(e) => { setLoadsDryingPerWeek(e.target.value) }} value={loadsDryingPerWeek}>\n      <option value=\"N/A\" selected> Prefer Not to Answer</option>                    \n                            <option value=\"1\"> 0 </option>\n                            <option value=\"2\"> 1-2</option>\n                            <option value=\"3\"> 3-4</option>\n                            <option value=\"4\"> 5-6</option>\n                            <option value=\"5\"> 7+</option>\n                        </Form.Select>\n                    </Form.Group>\n                </Carousel.Item>\n                <Carousel.Item>\n                    <Form.Group className=\"questionDiv\" controlId=\"formNumber\">\n                        <Form.Label> 10. How many hours is the dishwasher running each week?</Form.Label>\n                        <Form.Select type=\"select\" onChange={(e) => { setHoursDishwasherPerWeek(e.target.value) }} value={hoursDishwasherPerWeek}>\n      <option value=\"N/A\" selected> Prefer Not to Answer</option>                    \n                            <option value=\"1\"> 0 </option>\n                            <option value=\"2\"> 1-2</option>\n                            <option value=\"3\"> 3-4</option>\n                            <option value=\"4\"> 5-6</option>\n                            <option value=\"5\"> 7+</option>\n                        </Form.Select>\n                    </Form.Group>\n                </Carousel.Item>\n                <Carousel.Item>\n                    <Form.Group className=\"questionDiv\" controlId=\"formNumber\">\n                        <Form.Label> 11.How many hours per day are heavy bathroom electronics used (Hair dryer, Curling Iron, Clothing Iron, etc.)</Form.Label>\n                        <Form.Select type=\"select\" onChange={(e) => { setHoursBathroomElectronicsPerDay(e.target.value) }} value={hoursBathroomElectronicsPerDay}>\n      <option value=\"N/A\" selected> Prefer Not to Answer</option>                    \n                            <option value=\"1\"> 0 </option>\n                            <option value=\"2\"> 1-2</option>\n                            <option value=\"3\"> 3-4</option>\n                            <option value=\"4\"> 5-6</option>\n                            <option value=\"5\"> 7+</option>\n                        </Form.Select>\n                    </Form.Group>\n                </Carousel.Item>\n                <Carousel.Item>\n                    <Form.Group className=\"questionDiv\" controlId=\"formNumber\">\n                        <Form.Label> 12. How many hours per day do you use laptops or desktop computers? </Form.Label>\n                        <Form.Select type=\"select\" onChange={(e) => { setHoursComputerPerDay(e.target.value) }} value={hoursComputerPerDay}>\n      <option value=\"N/A\" selected> Prefer Not to Answer</option>                    \n                            <option value=\"1\"> 0 </option>\n                            <option value=\"2\"> 1-2</option>\n                            <option value=\"3\"> 3-4</option>\n                            <option value=\"4\"> 5-6</option>\n                            <option value=\"5\"> 7+</option>\n                        </Form.Select>\n                    </Form.Group>\n                </Carousel.Item>\n                <Carousel.Item>\n                    <Form.Group className=\"questionDiv\" controlId=\"formNumber\">\n                        <Form.Label> 13. How many hours per day do you watch TV?</Form.Label>\n                        <Form.Select type=\"select\" onChange={(e) => { setHoursTVPerDay(e.target.value) }} value={hoursTVPerDay}>\n      <option value=\"N/A\" selected> Prefer Not to Answer</option>                    \n                            <option value=\"1\"> 0 </option>\n                            <option value=\"2\"> 1-2</option>\n                            <option value=\"3\"> 3-4</option>\n                            <option value=\"4\"> 5-6</option>\n                            <option value=\"5\"> 7+</option>\n                        </Form.Select>\n                    </Form.Group>\n                </Carousel.Item>\n                <Carousel.Item>\n                    <Form.Group className=\"questionDiv\" controlId=\"formNumber\">\n                        <Form.Label> 14. Do you use a smart home system?</Form.Label>\n                        <Form.Select type=\"select\" onChange={(e) => { setSmartHome(e.target.value) }} value={smartHome}>\n      <option value=\"N/A\" selected> Prefer Not to Answer</option>                    \n                            <option value=\"1\"> 0 </option>\n                            <option value=\"2\"> 1-2</option>\n                            <option value=\"3\"> 3-4</option>\n                            <option value=\"4\"> 5-6</option>\n                            <option value=\"5\"> 7+</option>\n                        </Form.Select>\n                    </Form.Group>\n                </Carousel.Item>\n                <Carousel.Item>\n                    <Form.Group className=\"questionDiv\" controlId=\"formNumber\">\n                        <Form.Label> 15. How many hours per day do you use other electronics (game console, DVD player, sound system)?</Form.Label>\n                        <Form.Select type=\"select\" onChange={(e) => { sethoursNECPerDay(e.target.value) }} value={hoursNECPerDay}>\n      <option value=\"N/A\" selected> Prefer Not to Answer</option>                    \n                            <option value=\"1\"> 0 </option>\n                            <option value=\"2\"> 1-2</option>\n                            <option value=\"3\"> 3-4</option>\n                            <option value=\"4\"> 5-6</option>\n                            <option value=\"5\"> 7+</option>\n                        </Form.Select>\n                    </Form.Group>\n                </Carousel.Item>\n                <Carousel.Item>\n                </Carousel.Item>\n            </Carousel>\n            <Row>\n                <Col className=\"controls\">\n                    <Button onClick={handlePrev} disabled={canGoBack()}>\n                        Previous\n                    </Button>\n                </Col>\n                <Col className=\"controls\">\n                    <Button onClick={handleNext} disabled={canGoNext()}>\n                        Next\n                    </Button>\n                </Col>\n            </Row>\n        </div>\n    );\n\n}\n\nexport default Survey;\n","import React from \"react\";\nimport {\n  ZoomableGroup,\n  ComposableMap,\n  Geographies,\n  Geography\n} from \"react-simple-maps\";\n\nconst geoUrl =\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\n\nconst MapChart = ({ setCountryContent, setCountryCode, isUSA}) => {\n  var content;\n  return (\n    <>\n      <ComposableMap data-tip=\"\" projectionConfig={{ scale: 100 }}>\n        <ZoomableGroup>\n          <Geographies geography={geoUrl}>\n            {({ geographies }) =>\n              geographies.map(geo => (\n                <Geography\n                  key={geo.rsmKey}\n                  geography={geo}\n                  onMouseEnter={() => {\n                    const { NAME, ISO_A3 } = geo.properties;\n                    content = `${NAME}`;\n                    setCountryContent(content);\n                    setCountryCode(`${ISO_A3}`)\n                  }}\n                  onMouseLeave={() => {\n                    setCountryContent(\"\");\n                    setCountryCode(\"\");\n                  }}\n\n                  onClick={() => {\n                    const { NAME, ISO_A3 } = geo.properties;\n                    setCountryContent(`${NAME} click`);\n                    setCountryCode(`${ISO_A3}`)\n                    isUSA(`${ISO_A3}`===\"USA\")\n                  }}\n\n                  style={{\n                    default: {\n                      fill: \"#F5F4F6\",\n                      outline: \"none\"\n                    },\n                    hover: {\n                      fill: \"#A8E541\",\n                      outline: \"none\"\n                    },\n                    pressed: {\n                      fill: \"#7DD94B\",\n                      outline: \"none\"\n                    }\n                  }}\n                />\n              ))\n            }\n          </Geographies>\n        </ZoomableGroup>\n      </ComposableMap>\n    </>\n  );\n};\n\nexport default MapChart;\n","import React from \"react\";\nimport {\n  ComposableMap,\n  Geographies,\n  Geography\n} from \"react-simple-maps\";\nimport './Dashboard.css'\n\n\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json\";\n\nconst UnitedStatesChart = ({ setCountryContent, setCountryCode }) => {\n  var content;\n  return (\n    <ComposableMap projection=\"geoAlbersUsa\">\n      <Geographies geography={geoUrl}>\n            {({ geographies }) =>\n              geographies.map(geo => (\n                <Geography\n                  key={geo.rsmKey}\n                  geography={geo}\n                  onMouseEnter={() => {\n                    const { name } = geo.properties;\n                    content = `${name}`;\n                    setCountryContent(\"United States: \"+content);\n                    setCountryCode(\"USA\")\n                  }}\n                  onMouseLeave={() => {\n                    setCountryContent(\"United States\");\n                  }}\n\n                  onClick={() => {\n                    const { name } = geo.properties;\n                    setCountryContent(`United States: ${name} click`);\n                    setCountryCode(\"USA\")\n                  }}\n\n                  style={{\n                    default: {\n                      fill: \"#F5F4F6\",\n                      outline: \"none\"\n                    },\n                    hover: {\n                      fill: \"#A8E541\",\n                      outline: \"none\"\n                    },\n                    pressed: {\n                      fill: \"#7DD94B\",\n                      outline: \"none\"\n                    }\n                  }}\n                />\n              ))\n            }\n      </Geographies>\n    </ComposableMap>\n  );\n};\n\nexport default UnitedStatesChart;\n","import {React, useState} from \"react\";\nimport '../App.css';\nimport './Dashboard.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Button, ButtonGroup, ButtonToolbar, Popover, OverlayTrigger, Tooltip} from \"react-bootstrap\";\nimport MapChart from \"./MapChart\";\nimport UnitedStatesChart from \"./UnitedStatesChart\";\n\n\n\nfunction Dashboard() {\n  const [country, setCountry] = useState(\"\");\n  const [isUS, setIsUs] = useState(false);\n  const [countryCode, setCode] = useState(\"\");\n\n\n  function returnIsUS(){\n      return isUS;\n  }\n\n\n\n  return (\n    \n    <div className=\"dashboard\">\n      <div className=\"left w50\">\n        {returnIsUS()?<Button className=\"button\" onClick={() => {setIsUs(false)}}>Exit US</Button>:null}\n        {returnIsUS()?<UnitedStatesChart setCountryContent={setCountry} setCountryCode={setCode}/>:<MapChart setCountryContent={setCountry} setCountryCode={setCode} isUSA={setIsUs}/>}\n        {country}\n      </div>\n      <div className=\"right w50\">\n        {\"process data from \"+countryCode}\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport {Home, Survey, Dashboard} from './pages';\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact component={() => <Home />} />\n          <Route path=\"/survey\" exact component={() => <Survey />} />\n          <Route path=\"/dashboard\" exact component={() => <Dashboard />} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}